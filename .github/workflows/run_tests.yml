name: tests

on:
  # only run tests and coverage when src code changes
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths:
      - "shap/**"
      - "tests/**"
      - "data/**"
      - ".github/workflows/run_tests.yml"
      - "setup.py"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run_tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache python libs
        uses: actions/cache@v3
        with:
          path: |
            # Only cache a subset of libraries, ensuring cache size remains under 10GB. See dsgibbons#42
            ${{ env.pythonLocation }}/**/site-packages/pyspark*
            ${{ env.pythonLocation }}/**/site-packages/nvidia*
            ${{ env.pythonLocation }}/**/site-packages/torch*
          #  ${{ env.pythonLocation }}/**/site-packages/tensorflow*
          #  ${{ env.pythonLocation }}/**/site-packages/xgboost*
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-0
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Use "eager" update strategy in case cached dependencies are outdated
          pip install --upgrade --upgrade-strategy eager -e '.[test,plots]'
      - name: Test with pytest
        run: |
          python -m pytest --durations=20 \
          --cov=shap --cov-report=xml --cov-report=term-missing \
          --mpl-generate-summary=html --mpl-results-path=./mpl-results
      - name: Upload mpl test report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: mpl-results-${{ matrix.python-version }}
          path: mpl-results/
          if-no-files-found: ignore
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  run_tests_core:
    name: run_tests (core only)
    # Run tests with only the core dependencies, to ensure we
    # cover the latest version of numpy/pandas. See dsgibbons#46
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[test-core,plots]'
      - name: Test with pytest
        run: |
          python -m pytest
